apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - args:
        - -Djboss.https.port=8081 -Djboss.http.port=8082
        env:
        - name: DB_VENDOR
          value: h2
        - name: KEYCLOAK_PASSWORD
          value: admin
        - name: KEYCLOAK_USER
          value: admin
        image: jboss/keycloak:11.0.2
        imagePullPolicy: IfNotPresent
        name: keycloak
        ports:
        - containerPort: 8081
        - containerPort: 8082
        resources: {}
        volumeMounts:
        - mountPath: /etc/x509/https/tls.crt
          name: keycloak-tls-crt
        - mountPath: /etc/x509/https/tls.key
          name: keycloak-tls-key
        - mountPath: /home/keycloakSetup.sh
          name: keycloak-setup-script
        - mountPath: /opt/jboss/keycloak/standalone/data
          name: keycloak-data
        - mountPath: /home/keycloak.jks
          name: keycloak-keystore
      restartPolicy: Always
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: ""
      volumes:
      - name: keycloak-tls-crt
        hostPath:
          path: /home/conf/certs/server.crt
          type: File
      - name: keycloak-tls-key
        hostPath:
          path: /home/conf/certs/server.key
          type: File
      - name: keycloak-setup-script
        hostPath:
          path: /home/conf/config/keycloakSetup.sh
          type: File
      - name: keycloak-data
        hostPath:
          path: /home/keycloak-db
          type: Directory
      - name: keycloak-keystore
        hostPath:
          path: /home/conf/keystore/ucpkeystore.jks
          type: File
      
status: {}

