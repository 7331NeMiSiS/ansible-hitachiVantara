- name: Hitachi Vantara storage module example - Create and Present Lun
  hosts: caas
  gather_facts: yes
  vars:
    size: "{{ lun_size_GB|int * 1024 * 1024 * 1024 }}"
  vars_files:
    - ./storage_registration.yml
  tasks:
    - name: show debug stuff
      debug: msg="{{ lun_name }};; {{ dynamic_pool_id }};;  {{ size }}"
    # first task is creating a LUN
    - name: create lun
      uri:
        url: "{{ url_prefix }}/storage/ext/logical-units"
        method: POST
        timeout: 120
        headers:
          X-Subsystem-User: "{{ user }}"
          X-Subsystem-Password: "{{ password }}"
          X-Subsystem-Type: "{{ storage_type }}"
          X-Management-IPs: "{{ storage_IP }}"
          X-Storage-Id: "{{ storage_serial }}"
          Content-Type: "application/json"
        validate_certs: no
        return_content: yes
        body_format: json
        body: ' {"name": "{{ lun_name }}", "logicalUnitId": -1, "storageTypeId": "{{ dynamic_pool_id }}", "capacity": {{ size }} }'
      ignore_errors: yes
      register: create_lun

    - name: show lun information1
      debug: msg="{{ create_lun.json }}"

    - name: write debug information for created LUN
      debug: msg="individualCapacity= {{ create_lun.json.logicalUnit.individualCapacity }};; ID_logicalUnitId= {{ create_lun.json.logicalUnit.logicalUnitId }};;"

    - copy: content="{{ create_lun.json }}" dest=/root/jsons/create_lun.log

    - name: Add Storage
      uri:
        url: "{{ vro_url_prefix }}/StorageManager/StorageManager/AddRAID"
        method: POST
        timeout: 120
        validate_certs: no
        return_content: yes
        body:
            sessionId: ""
            serialNumber: "{{ storage_serial|int }}"
            location: "{{ storage_IP }}"
            controllerIP: "{{ controller_IP }}"
            userID: "{{ user }}"
            password: "{{ password }}"
            gatewayServer: "{{ gatewayServer }}"
            gatewayServerPort: "{{ gatewayServerPort }}"
        body_format: json
      ignore_errors: yes
      register: add_storage

    - name: Print Add Storage JSON result
      debug: msg="{{ add_storage.json }}"

    - copy: content="{{ add_storage.json }}" dest=/root/jsons/add_storage.log

    - name: Present Lun
      uri:
        url: "{{ vro_url_prefix }}/HostGroup/HostGroup/AddHostGroupLogicalUnitWithHostGroupLUNID"
        method: POST
        timeout: 120
        validate_certs: no
        return_content: yes
        body:
            sessionId: "{{ add_storage.json.SessionId }}"
            serialNumber: "{{ storage_serial|int }}"
            port: "{{ storage_port }}"
            hostGroupName: "{{ hostgroup_name }}"
            ldevid: "{{ create_lun.json.logicalUnit.logicalUnitId }}"
        body_format: json
      ignore_errors: yes

    - name: Remove Storage
      uri:
        url: "{{ vro_url_prefix }}/StorageManager/StorageManager/CloseArrayConnections"
        method: POST
        timeout: 120
        validate_certs: no
        return_content: yes
        body:
            sessionId: "{{ add_storage.json.SessionId }}"
        body_format: json
      ignore_errors: yes

    - name: Adding and Presenting Lun
      debug: msg="Adding and Presenting Lun finished succesfully."
